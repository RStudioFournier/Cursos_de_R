(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
getwd()
setwd("~/Dropbox/Codigos en R/UAM/Curso_de_Lenguaje_R-XXVSMM")
getwd()
library(compositions)
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
library(compositions)
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
library(compositions)
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
library(compositions)
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
library(compositions)
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
library(compositions)
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
library(compositions)
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
library(compositions)
x <- sample(1:500, 2) ; names(x) <- c("agua", "tierra") ; x #composicion en kilos
(x0 <- acomp(x, total = 1)) #en proporciones
y <- sample(1:500, 2) ; names(y) <- c("agua", "tierra") ; x #composicion en kilos
(y0 <- acomp(y, total = 1)) #en proporciones
x1 <- clr(x0)
y1 <- clr(y0)
plot(c(1, 0), c(0, 1), xlim = c(ifelse(min(x1[1], y1[1], (x1+y1)[1]) < 0, min(x1[1], y1[1], (x1+y1)[1]), 0), ifelse(max(x1[1], y1[1], (x1+y1)[1]) > 1, max(x1[1], y1[1], (x1+y1)[1]), 1)), ylim = c(ifelse(min(x1[2], y1[2], (x1+y1)[2]) < 0, min(x1[2], y1[2], (x1+y1)[2]), 0), ifelse(max(x1[2], y1[2], (x1+y1)[2]) > 1, max(x1[2], y1[2], (x1+y1)[2]), 1)))
lines(c(1, 0), c(0, 1))
abline(h = 0, v = 0, lty = 3, col = "gray")
points(x0[1], x0[2], col = "darkblue", pch = 19)
points(y0[1], y0[2], col = "darkgreen", pch = 19)
points((x0+y0)[1], (x0+y0)[2], col = "red", pch = 19)
points(x1[1], x1[2], col = "lightblue", pch = 19)
lines(c(0, x1[1]), c(0, x1[2]))
points(y1[1], y1[2], col = "lightgreen", pch = 19)
lines(c(0, y1[1]), c(0, y1[2]))
points((x1+y1)[1], (x1+y1)[2], col = "red", pch = 19)
lines(c(0, (x1+y1)[1]), c(0, (x1+y1)[2]))
knitr::opts_chunk$set(echo = FALSE)
base <- read.csv(
"/Users/Daniel/Dropbox/Codigos en R/UAM/Curso_de_Lenguaje_R-XXVSMM/Iris.csv")
base <- read.csv(
"/Users/Daniel/Dropbox/Codigos en R/UAM/Curso_de_Lenguaje_R-XXVSMM/Iris.csv")
head(base)
base <- read.delim(
"/Users/Daniel/Dropbox/Codigos en R/UAM/Curso_de_Lenguaje_R-XXVSMM/Iris.txt")
head(base, n = 8)
base <- read.delim(file = "clipboard")
base <- read.delim(file = pipe("pbpaste"))
x <- rnorm(100)
quantile(x, c(.25, .75))
library("mvtnorm", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
rmvnorm(100, rep(0, 9), diag(9))
x  <- rmvnorm(100, rep(0, 9), diag(9))
quantile(x, c(.25, .75))
qmvnorm(.25, tail = "lower.tail", mean = rep(0, 9), sigma = diag(9))
qmvnorm(.25, mean = rep(0, 9), sigma = diag(9))
qmvnorm(0.95, sigma = diag(2), tail = "both")
?quantile
qmvnorm(0.5, sigma = diag(2), tail = "both")
pmvnorm(upper = x[1, ], mean = rep(0, 9), sigma = diag(9))
x <- rmvnorm(n=100, mean = rep(0, 2), sigma = diag(2))
x
pmvnorm(upper = c(0, 0), mean = rep(0, 2), sigma = diag(2))
pmvnorm(upper = x, mean = rep(0, 2), sigma = diag(2))
pmvnorm(upper = x[1,], mean = rep(0, 2), sigma = diag(2))
pmvnorm(upper = x[1:100,], mean = rep(0, 2), sigma = diag(2))
pmvnorm(upper = x[6,], mean = rep(0, 2), sigma = diag(2))
data("iris")
head(iris)
data("iris")
head(iris)
attach(iris)
Sepal.Length
class(iris)
class(iris$Sepal.Length)
class(iris$Species)
summary(iris)
table(iris$Species)
sum(table(iris$Species))
table(iris$Species)/sum(table(iris$Species))
t.e <- table(iris$Species)
(t.e <- table(iris$Species))
(t.e/sum(t.e))
(fa <- table(iris$Species))
(fr <- fa/sum(fa))
round(fr, digits = 2)
levels(iris$Species)
(lev <- levels(iris$Species))
levels(iris$Species) <- c("Tipo1", "Tipo2", "Tipo3")
View(iris)
levels(iris$Species) <- lev
View(iris)
sample(1:3, dim(iris)[1])
sample(1:3, dim(iris)[1], replace = TRUE)
iris$Localidad <- sample(1:3, dim(iris)[1], replace = TRUE)
View(iris)
iris$Localidad <- sample(A:C, dim(iris)[1], replace = TRUE)
?seq
gl(3, 150, labels = c("A", "B", "C"))
gl(n = 3, k = 150, length = 150, labels = c("A", "B", "C"))
gl(n = 3, k = 15, length = 150, labels = c("A", "B", "C"))
gl(n = 3, k = 33, length = 150, labels = c("A", "B", "C"))
gl(n = 3, k = 33, length = 150, labels = c("A", "B", "C"), ordered = TRUE)
gl(n = 3, k = 8, length = 150, labels = c("A", "B", "C"), ordered = TRUE)
gl(n = 3, k = 8, length = 150, labels = c("A", "B", "C"))
Localidad <- gl(n = 3, k = 8, length = 150, labels = c("A", "B", "C"))
Localidad[3]
Localidad[sample(1:150, 150)]
iris$Localidad <- Localidad
View(iris)
iris$Localidad <- Localidad
View(iris)
iris$Localidad
Localidad
Localidad <- Localidad[sample(1:150, 150)]
iris$Localidad <- Localidad
View(iris)
table(iris$Species, iris$Localidad)
table(Species = iris$Species, Localidad = iris$Localidad)
?barplot
barplot(iris$Species)
barplot(fa)
barplot(table(iris$Localidad))
Localidad <- Localidad[sample(1:150, 150, replace = TRUE)]
iris$Localidad <- Localidad
table(Species = iris$Species, Localidad = iris$Localidad)
barplot(fa)
barplot(table(iris$Localidad))
pie(table(iris$Localidad))
#Grafico de Barras
barplot(fa)
barplot(table(iris$Localidad))
barplot(sort(table(iris$Localidad)))
barplot(sort(table(iris$Localidad)), main = "Grafica de Barras", xlab = "Localidad", ylab = "Frecuencias Absolutas")
barplot(sort(table(iris$Localidad)), col = "Lightblue", main = "Grafica de Barras", xlab = "Localidad", ylab = "Frecuencias Absolutas")
barplot(sort(table(iris$Localidad)), col = "Lightblue", main = "Grafica de Barras(Iris)", xlab = "Localidad", ylab = "Frecuencias Absolutas")
barplot(sort(table(iris$Localidad)), col = "Lightblue", main = "Grafica de Barras \n Iris", xlab = "Localidad", ylab = "Frecuencias Absolutas")
pie(table(iris$Localidad))
#Tabla de Frecuencias
(Tabla <- as.data.frame(table(Localidad = iris$Localidad)))
#Tabla de Frecuencias
(tabla <- as.data.frame(table(Localidad = iris$Localidad)))
(tabla <- transform(tabla, Freq.Acum = cumsum(Freq), Freq.Rel = prop.table(Freq)))
(tabla <- transform(tabla, Freq.Rel.Acum = cumsum(Freq.Rel)))
(tabla <- transform(tabla, Freq.Porc = 100*Freq.Rel, Freq.Porc.Acum = 100*Freq.Rel.Acum))
data(iris)
Localidad <- gl(n = 3, k = 8, length = 150, labels = c("A", "B", "C"))
Localidad <- Localidad[sample(1:150, 150, replace = TRUE)]
iris$Localidad <- Localidad
#Tabla de Frecuencias
(tabla <- as.data.frame(table(Localidad = iris$Localidad)))
(tabla <- transform(tabla, Freq.Porc = 100*Freq.Rel, Freq.Porc.Acum = 100*Freq.Rel.Acum))
(tabla <- transform(tabla, Freq.Acum = cumsum(Freq), Freq.Rel = prop.table(Freq)))
(tabla <- transform(tabla, Freq.Rel.Acum = cumsum(Freq.Rel)))
(tabla <- transform(tabla, Freq.Porc = 100*Freq.Rel, Freq.Porc.Acum = 100*Freq.Rel.Acum))
options(digits = 2)
(tabla <- transform(tabla, Freq.Acum = cumsum(Freq), Freq.Rel = prop.table(Freq)))
(tabla <- transform(tabla, Freq.Rel.Acum = cumsum(Freq.Rel)))
(tabla <- transform(tabla, Freq.Porc = 100*Freq.Rel, Freq.Porc.Acum = 100*Freq.Rel.Acum))
pie(tabla$Freq.Porc, main=c("Grafico de Pastel"), labels = paste(tabla$Localidad,paste(round(tabla$Freq.Porc, digits = 2), "%", sep = "")))
hist(iris$Sepal.Length)
iris$Species
iris$Species*1
iris$Species+0
Spe <- iris$Species ; dhSpe <- hist(Spe, plot = FALSE)$density
Spe <- iris$Sepal.Length ; dhSpe <- hist(Spe, plot = FALSE)$density
hist(Spe, freq = FALSE, ylim = c(-max(dhSpe)/10, max(dhSpe)), col = "gray88", main = "", xlab = "", ylab = "")
set.seed(1)
points(Spe, runif(length(Spe), -max(dhSpe)/10, -max(dhSpe)/40), col = iris$Species,  cex = 1.5, pch = 20)
lines(density(Spe), col = "red", lwd = 3)
title(main = "Densidad del Biomarcador", xlab = "PgR", ylab = "Frecuencia")
legend("topright", c("ER Negativo", "ER Positivo", "Kernel"), lty = c(-1, -1, 1), pch = c(20, 20, NA), lwd = c(1.5, 1.5, 3), merge = TRUE, col = c("royalblue4", "tomato3", "red"), cex = 1, pt.cex = 1.5, x.intersp = .7, y.intersp = 1)
hist(iris$Sepal.Length)
hist(iris$Sepal.Width)
hist(iris$Petal.Length)
hist(iris$Petal.Width)
levels(iris$Species)
Spe <- iris$Petal.Width ; dhSpe <- hist(Spe, plot = FALSE)$density
hist(Spe, freq = FALSE, ylim = c(-max(dhSpe)/10, max(dhSpe)), col = "gray88", main = "", xlab = "", ylab = "")
set.seed(1)
points(Spe, runif(length(Spe), -max(dhSpe)/10, -max(dhSpe)/40), col = iris$Species,  cex = 1.5, pch = 20)
title(main = "Densidad del Biomarcador", xlab = "PgR", ylab = "Frecuencia")
legend("topright", levels(iris$Species), lty = c(-1, -1, 1), pch = c(20, 20, NA), lwd = c(1.5, 1.5, 3), merge = TRUE, col = c(1:3), cex = 1, pt.cex = 1.5, x.intersp = .7, y.intersp = 1)
if(0){
Spe <- iris$Petal.Width ; dhSpe <- hist(Spe, plot = FALSE)$density
hist(Spe, freq = FALSE, ylim = c(-max(dhSpe)/10, max(dhSpe)), col = "gray88", main = "", xlab = "", ylab = "")
set.seed(1)
points(Spe, runif(length(Spe), -max(dhSpe)/10, -max(dhSpe)/40), col = iris$Species,  cex = 1.5, pch = 20)
title(main = "Densidad del Biomarcador", xlab = "PgR", ylab = "Frecuencia")
legend("topright", levels(iris$Species), lty = c(-1, -1, -1), pch = c(20, 20, 20), lwd = c(1.5, 1.5, 1.5), merge = TRUE, col = c(1:3), cex = 1, pt.cex = 1.5, x.intersp = .7, y.intersp = 1)
}
if(1){
Spe <- iris$Petal.Width ; dhSpe <- hist(Spe, plot = FALSE)$density
hist(Spe, freq = FALSE, ylim = c(-max(dhSpe)/10, max(dhSpe)), col = "gray88", main = "", xlab = "", ylab = "")
set.seed(1)
points(Spe, runif(length(Spe), -max(dhSpe)/10, -max(dhSpe)/40), col = iris$Species,  cex = 1.5, pch = 20)
title(main = "Densidad del Biomarcador", xlab = "PgR", ylab = "Frecuencia")
legend("topright", levels(iris$Species), lty = c(-1, -1, -1), pch = c(20, 20, 20), lwd = c(1.5, 1.5, 1.5), merge = TRUE, col = c(1:3), cex = 1, pt.cex = 1.5, x.intersp = .7, y.intersp = 1)
}
Spe <- iris$Sepal.Width ; dhSpe <- hist(Spe, plot = FALSE)$density
hist(Spe, freq = FALSE, ylim = c(-max(dhSpe)/10, max(dhSpe)), col = "gray88", main = "", xlab = "", ylab = "")
if(1){
Spe <- iris$Sepal.Width ; dhSpe <- hist(Spe, plot = FALSE)$density
hist(Spe, freq = FALSE, ylim = c(-max(dhSpe)/10, max(dhSpe)), col = "gray88", main = "", xlab = "", ylab = "")
set.seed(1)
points(Spe, runif(length(Spe), -max(dhSpe)/10, -max(dhSpe)/40), col = iris$Species,  cex = 1.5, pch = 20)
title(main = "Histograma del ancho del Sepalo", xlab = "PgR", ylab = "Frecuencia")
legend("topright", levels(iris$Species), lty = c(-1, -1, -1), pch = c(20, 20, 20), lwd = c(1.5, 1.5, 1.5), merge = TRUE, col = c(1:3), cex = 1, pt.cex = 1.5, x.intersp = .7, y.intersp = 1)
}
if(1){
Spe <- iris$Petal.Width ; dhSpe <- hist(Spe, plot = FALSE)$density
hist(Spe, freq = FALSE, ylim = c(-max(dhSpe)/10, max(dhSpe)), col = "gray88", main = "", xlab = "", ylab = "")
set.seed(1)
points(Spe, runif(length(Spe), -max(dhSpe)/10, -max(dhSpe)/40), col = iris$Species,  cex = 1.5, pch = 20)
title(main = "Histograma del ancho del Petalo", xlab = "Ancho del Petalo", ylab = "Frecuencia")
legend("topright", levels(iris$Species), lty = c(-1, -1, -1), pch = c(20, 20, 20), lwd = c(1.5, 1.5, 1.5), merge = TRUE, col = c(1:3), cex = 1, pt.cex = 1.5, x.intersp = .7, y.intersp = 1)
}
if(1){
Spe <- iris$Sepal.Width ; dhSpe <- hist(Spe, plot = FALSE)$density
hist(Spe, freq = FALSE, ylim = c(-max(dhSpe)/10, max(dhSpe)), col = "gray88", main = "", xlab = "", ylab = "")
set.seed(1)
points(Spe, runif(length(Spe), -max(dhSpe)/10, -max(dhSpe)/40), col = iris$Species,  cex = 1.5, pch = 20)
title(main = "Histograma del ancho del Sepalo", xlab = "Ancho del Sepalo", ylab = "Frecuencia")
legend("topright", levels(iris$Species), lty = c(-1, -1, -1), pch = c(20, 20, 20), lwd = c(1.5, 1.5, 1.5), merge = TRUE, col = c(1:3), cex = 1, pt.cex = 1.5, x.intersp = .7, y.intersp = 1)
}
hist(iris$Sepal.Length)
hist(iris$Sepal.Length)
quantile(iris$Sepal.Length)
dat1 <- data.frame(Nombres = c("Lucia", "Ernesto", "Sofia", "Eduardo")
, Edades = c(19, 23, 34, 43))
dat2 <- data.frame(Estatura = c(1.73, 1.50, 1.45, 1.80),
Peso = c(73, 80, 56, 84))
dat3 <- data.frame(dat1, dat2)
dat1; dat2
dat3
